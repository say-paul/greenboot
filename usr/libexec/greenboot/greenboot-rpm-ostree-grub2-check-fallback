#!/bin/bash
set -euo pipefail

function remount_boot_ro {
    if grep -q " /boot .* rw," /proc/mounts; then
        mount -o remount,ro /boot || exit 5
    fi
    return
}

# Determine if the current boot is a fallback boot
# If booted into fallback deployment, clean up bootloader entries (rollback)
if grub2-editenv list | grep -q "^boot_counter=-1$"; then
  # Logs from previous boot may be unavailable on systems without internal RTC; defaulting to empty string
  prev_logs="$(journalctl -u greenboot-healthcheck.service -p 2 -b -1 -o cat)" || true
  rpm-ostree rollback
  echo "<3>FALLBACK BOOT DETECTED! Default rpm-ostree deployment has been rolled back."
  if [ -n "$prev_logs" ]; then
    echo "<3>Health check logs from previous boot:"
    echo "<3>$prev_logs"
  fi


  # Check if /boot is mounted as read-only, and remount as read-write if necessary
  if grep -q " /boot .* ro," /proc/mounts; then
      mount -o remount,rw /boot || exit 5
  fi

  if ! /usr/bin/grub2-editenv - unset boot_counter; then
    # If the above command fails, remount /boot as read-only and exit with failure
    remount_boot_ro
    exit 1
  fi
fi

# Remount /boot as read-only if it was mounted as read-write
remount_boot_ro
